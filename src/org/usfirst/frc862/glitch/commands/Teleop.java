// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc862.glitch.commands;
import com.team254.lib.util.CheesyDriveHelper;
import com.team254.lib.util.DriveSignal;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc862.glitch.Robot;
import org.usfirst.frc862.util.Logger;

/**
 *
 */
public class Teleop extends Command {
    private CheesyDriveHelper cheesyDrive;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Teleop() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    @Override
    public synchronized void start() {
        Robot.driveTrain.setVoltageMode();
        Logger.info("Start Teleop");
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {

        cheesyDrive = new CheesyDriveHelper();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        DriveSignal drive = cheesyDrive.cheesyDrive(Robot.oi.getThrust(), Robot.oi.getRotation(),
                Robot.oi.getQuickTurn(), Robot.shifter.isHighGear());
//        Robot.driveTrain.setVelocity(drive);
        Robot.driveTrain.setPower(drive);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.driveTrain.stop();
        Logger.info("End Teleop");
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        Logger.info("Interrupted");
        end();
    }
}
