// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc862.glitch.subsystems;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.FeedbackDevice;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc862.glitch.Constants;
import org.usfirst.frc862.glitch.RobotMap;
import org.usfirst.frc862.glitch.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class FourBar extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX motor = RobotMap.fourBarmotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public FourBar() {
        super();
        motor.configSelectedFeedbackSensor(FeedbackDevice.QuadEncoder, 0, Constants.TALON_TIMEOUT);
        motor.configAllowableClosedloopError(0, Constants.ALLOWABLE_FOURBAR_ERROR, Constants.TALON_TIMEOUT);
        motor.config_kP(0, Constants.FOURBAR_P, Constants.TALON_TIMEOUT);
        motor.config_kI(0, Constants.FOURBAR_I, Constants.TALON_TIMEOUT);
        motor.config_kD(0, Constants.FOURBAR_D, Constants.TALON_TIMEOUT);
        motor.config_kF(0, Constants.FOURBAR_F, Constants.TALON_TIMEOUT);
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new ControlFourBar());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        SmartDashboard.putNumber("FourBar Encoder", (double) motor.getSelectedSensorPosition(0));
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public int getPositionEnc() {
        return motor.getSelectedSensorPosition(0);
    }

    public void moveToScale() {
        RobotMap.fourBarmotor.set(ControlMode.Position, Constants.FOURBAR_SCALE_POS);
    }

    public void moveToSwitch() {
            RobotMap.fourBarmotor.set(ControlMode.Position, Constants.FOURBAR_SWITCH_POS);
    }

    public void moveToBottom() {
        RobotMap.fourBarmotor.set(ControlMode.Position, Constants.FOURBAR_BOTTOM_POS);
    }

    public void moveToCollect() {
        RobotMap.fourBarmotor.set(ControlMode.Position, Constants.FOURBAR_COLLECT_POS);
    }
}

